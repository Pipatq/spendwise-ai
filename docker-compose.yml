# version: '3.8'

services:
  # Service 1: Database (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: spendwise_db
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      # ดึงค่ามาจากไฟล์ .env เพื่อความปลอดภัย
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # สั่งให้เก็บข้อมูลของ DB ไว้บนเครื่อง host
      # เพื่อให้ข้อมูลไม่หายไปเมื่อ container หยุดทำงาน
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spendwise-net

  # Service 2: Backend (Go API)
  backend:
    build:
      context: ./backend # บอกให้ build จากโฟลเดอร์ backend
      dockerfile: Dockerfile
    container_name: spendwise_backend
    restart: unless-stopped
    volumes:
      # Mount local backend directory to the container's app directory
      # for hot-reloading
      - ./backend:/app
    depends_on:
      - db # สั่งให้ backend เริ่มทำงานหลังจาก db พร้อมแล้ว
    environment:
      # ส่ง connection string ให้ Go app
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
    networks:
      - spendwise-net

  # Service 3: Frontend (React App) - DEVELOPMENT MODE
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev # Use the new development Dockerfile
    container_name: spendwise_frontend
    restart: unless-stopped
    volumes:
      # Mount local frontend directory for hot-reloading
      - ./frontend:/app
      # Prevent node_modules on host from overwriting container's node_modules
      - /app/node_modules
    networks:
      - spendwise-net

  # Service 4: Nginx Reverse Proxy (ประตูหน้า)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: spendwise_nginx
    restart: unless-stopped
    ports:
      # นี่คือจุดเดียวที่เชื่อมต่อกับโลกภายนอก
      # map port 80 ของเครื่องเรา ไปยัง port 80 ของ nginx container
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - spendwise-net

# กำหนด Network และ Volume
networks:
  spendwise-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local